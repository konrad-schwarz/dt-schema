# SPDX-License-Identifier: BSD-2-Clause
# Copyright 2018 Linaro Ltd.
# Copyright 2018 Arm Ltd.
%YAML 1.2
---
$id: "http://devicetree.org/meta-schemas/base.yaml#"
$schema: https://json-schema.org/draft/2019-09/schema
description: "Metaschema for devicetree binding documentation"

allOf:
  - $ref: "http://json-schema.org/draft-07/schema#"
  - $ref: "http://devicetree.org/meta-schemas/keywords.yaml#"  
  # I think this means include these files

properties:
  # listing all properties here to narrow the scope of what is allowed in
  # devicetree schema files. This list can be relaxed in the future as we
  # become more comfortable with the validation vocabulary.
  # Also, being explicit about what properties are allowed helps to catch
  # misspelled or unsupported tests.
  $id:
    pattern: 'http://devicetree.org/schemas/.*\.yaml#'
    # $id in DT schema have to have this form
  $schema:
    enum:
      - "http://devicetree.org/meta-schemas/core.yaml#"
      - "http://devicetree.org/meta-schemas/base.yaml#"
        # schema can be set to either one of these, base.yaml is this file
  title:
    maxLength: 100
    # length of title 
  examples:
    type: array
    items:
      type: string
# examples section is an array (list) of un-parsed strings
  maintainers:
    type: array
    items:
      type: string
      format: email

  select:
    description: '"select" must contain a valid json-schema'
    allOf:
      - $ref: "http://json-schema.org/draft-07/schema#"
      - oneOf:
          - type: object
            properties:
              properties: true
              required: true
          - type: boolean

propertyNames:
  enum: [ $id, $schema, title, description, examples, required, allOf, anyOf, oneOf,
          definitions, $defs, additionalProperties, dependencies, dependentRequired,
          dependentSchemas, patternProperties, properties, if, then, else,
          unevaluatedProperties, deprecated, maintainers, select, $ref ]

required:
  - $id
  - $schema
  - title
  - maintainers
